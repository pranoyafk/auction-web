/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AppMyBidsRouteImport } from './routes/_app/my-bids'
import { Route as AppShoeShoeIdRouteImport } from './routes/_app/shoe/$shoeId'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AppMyBidsRoute = AppMyBidsRouteImport.update({
  id: '/my-bids',
  path: '/my-bids',
  getParentRoute: () => AppRoute,
} as any)
const AppShoeShoeIdRoute = AppShoeShoeIdRouteImport.update({
  id: '/shoe/$shoeId',
  path: '/shoe/$shoeId',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/my-bids': typeof AppMyBidsRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof AppIndexRoute
  '/shoe/$shoeId': typeof AppShoeShoeIdRoute
}
export interface FileRoutesByTo {
  '/my-bids': typeof AppMyBidsRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof AppIndexRoute
  '/shoe/$shoeId': typeof AppShoeShoeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/my-bids': typeof AppMyBidsRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_app/': typeof AppIndexRoute
  '/_app/shoe/$shoeId': typeof AppShoeShoeIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/my-bids' | '/signin' | '/signup' | '/' | '/shoe/$shoeId'
  fileRoutesByTo: FileRoutesByTo
  to: '/my-bids' | '/signin' | '/signup' | '/' | '/shoe/$shoeId'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/my-bids'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_app/'
    | '/_app/shoe/$shoeId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/my-bids': {
      id: '/_app/my-bids'
      path: '/my-bids'
      fullPath: '/my-bids'
      preLoaderRoute: typeof AppMyBidsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/shoe/$shoeId': {
      id: '/_app/shoe/$shoeId'
      path: '/shoe/$shoeId'
      fullPath: '/shoe/$shoeId'
      preLoaderRoute: typeof AppShoeShoeIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppMyBidsRoute: typeof AppMyBidsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppShoeShoeIdRoute: typeof AppShoeShoeIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppMyBidsRoute: AppMyBidsRoute,
  AppIndexRoute: AppIndexRoute,
  AppShoeShoeIdRoute: AppShoeShoeIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
